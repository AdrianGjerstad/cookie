globalbody  : globalitem* EOF

globalitem  : KEYWORD:EXPORT? KEYWORD:CONST? (KEYWORD:_TYPE_|KEYWORD:VOID) IDENTIFIER arglist LBRACE codebody RBRACE
            : KEYWORD:EXPORT? KEYWORD:CONST? KEYWORD:_TYPE_ IDENTIFIER EQUALS expression SEMICOLON

arglist     : LPAREN RPAREN
            : LPAREN KEYWORD:_TYPE_ IDENTIFIER? (COMMA KEYWORD:_TYPE_ IDENTIFIER?)* RPAREN

codebody    : statement*

statement   : SEMICOLON
            : KEYWORD:CONST? KEYWORD:_TYPE_ IDENTIFIER (EQUALS expression)? SEMICOLON
            : KEYWORD:RETURN expression? SEMICOLON
            : conditional
            : loop
            : expression SEMICOLON

conditional : KEYWORD:IF LPAREN expression RPAREN LBRACE codebody RBRACE (KEYWORD:ELSE LBRACE codebody RBRACE)?
            : KEYWORD:IF LPAREN expression RPAREN LBRACE codebody RBRACE (KEYWORD:ELSE statement)?
            : KEYWORD:IF LPAREN expression RPAREN statement (KEYWORD:ELSE LBRACE codebody RBRACE)?
            : KEYWORD:IF LPAREN expression RPAREN statement (KEYWORD:ELSE statement)?

loop        : KEYWORD:WHILE LPAREN expression RPAREN LBRACE codebody RBRACE
            : KEYWORD:WHILE LPAREN expression RPAREN statement
            : KEYWORD:FOR LPAREN statement expression SEMICOLON expression RPAREN LBRACE codebody RBRACE
            : KEYWORD:FOR LPAREN statement expression SEMICOLON expression RPAREN statement
            : KEYWORD:DO LBRACE codebody RBRACE KEYWORD:WHILE LPAREN expression RPAREN SEMICOLON

expression  : condexpr ((DUBAMP|DUBPIPE|DUBCARET) condexpr)*

condexpr    : bitexpr ((DUBEQUALS|BANGEQUALS|LESS|GREATER|LESSEQUALS|GREATEREQUALS) bitexpr)*

bitexpr     : bitshexpr ((AMPERSAND|PIPE|CARET) bitshexpr)*

bitshexpr   : arithexpr ((DUBGRTH|DUBLSTH) arithexpr)*

arithexpr   : term ((PLUS|MINUS) term)*

term        : factor ((STAR|SLASH|PERCENT) factor)*

factor      : (I32|U32|I64|U64|F32|F64|BOOL|IDENTIFIER)
            : (PLUS|MINUS|TILDE|BANG) factor
            : IDENTIFIER (EQUALS|PLUSEQ|MINUSEQ|STAREQ|SLASHEQ|PERCENTEQ|AMPEQ|PIPEQ|CARETEQ|DUBGRTHEQ|DUBLSTHEQ) expression
            : IDENTIFIER LPAREN RPAREN
            : IDENTIFIER LPAREN expression (COMMA expression)* RPAREN
            : LPAREN expression RPAREN

